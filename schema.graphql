type Base {
  createdAt: ISO8601DateTime!
  defaultBpm: Int
  id: ID!
  maxPlaybackRate: Float
  minPlaybackRate: Float
  title: String!
  updatedAt: ISO8601DateTime!
  videos(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VideoConnection!
}

"""
The connection type for Base.
"""
type BaseConnection {
  """
  A list of edges.
  """
  edges: [BaseEdge]

  """
  A list of nodes.
  """
  nodes: [Base]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type BaseEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Base
}

"""
Autogenerated input type of CreatePlaylist
"""
input CreatePlaylistInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePlaylist
"""
type CreatePlaylistPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlist: Detail!
}

"""
Autogenerated input type of CreateVideo
"""
input CreateVideoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  key: String!
  playlistId: ID!
  youtubeVideoId: String!
}

"""
Autogenerated return type of CreateVideo
"""
type CreateVideoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  video: Video!
}

"""
Autogenerated input type of CreateVideos
"""
input CreateVideosInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  key: String!
  playlistId: ID!
  youtubePlaylistId: String!
}

"""
Autogenerated return type of CreateVideos
"""
type CreateVideosPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  videos: [Video!]!
}

"""
Autogenerated input type of DeleteVideo
"""
input DeleteVideoInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  key: String!
}

"""
Autogenerated return type of DeleteVideo
"""
type DeleteVideoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlist: Base!
}

type Detail {
  createdAt: ISO8601DateTime!
  defaultBpm: Int
  id: ID!
  key: String!
  maxPlaybackRate: Float
  minPlaybackRate: Float
  title: String!
  updatedAt: ISO8601DateTime!
  videos(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): VideoConnection!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutation {
  createPlaylist(
    """
    Parameters for CreatePlaylist
    """
    input: CreatePlaylistInput!
  ): CreatePlaylistPayload
  createVideo(
    """
    Parameters for CreateVideo
    """
    input: CreateVideoInput!
  ): CreateVideoPayload
  createVideos(
    """
    Parameters for CreateVideos
    """
    input: CreateVideosInput!
  ): CreateVideosPayload
  deleteVideo(
    """
    Parameters for DeleteVideo
    """
    input: DeleteVideoInput!
  ): DeleteVideoPayload
  updatePlaylist(
    """
    Parameters for UpdatePlaylist
    """
    input: UpdatePlaylistInput!
  ): UpdatePlaylistPayload
  updatePlaylistDefaultBpm(
    """
    Parameters for UpdatePlaylistDefaultBpm
    """
    input: UpdatePlaylistDefaultBpmInput!
  ): UpdatePlaylistDefaultBpmPayload
  updatePlaylistMaxPlaybackRate(
    """
    Parameters for UpdatePlaylistMaxPlaybackRate
    """
    input: UpdatePlaylistMaxPlaybackRateInput!
  ): UpdatePlaylistMaxPlaybackRatePayload
  updatePlaylistMinPlaybackRate(
    """
    Parameters for UpdatePlaylistMinPlaybackRate
    """
    input: UpdatePlaylistMinPlaybackRateInput!
  ): UpdatePlaylistMinPlaybackRatePayload
  updatePlaylistTitle(
    """
    Parameters for UpdatePlaylistTitle
    """
    input: UpdatePlaylistTitleInput!
  ): UpdatePlaylistTitlePayload
  updateVideo(
    """
    Parameters for UpdateVideo
    """
    input: UpdateVideoInput!
  ): UpdateVideoPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

input PlaylistInput {
  defaultBpm: Int
  maxPlaybackRate: Float
  minPlaybackRate: Float
  title: String
}

type Query {
  playlist(id: ID!): Base!
  playlists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int
    ids: [ID!]
    keyword: String

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): BaseConnection!
}

"""
Autogenerated input type of UpdatePlaylistDefaultBpm
"""
input UpdatePlaylistDefaultBpmInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  defaultBpm: Int
  id: ID!
  key: String!
}

"""
Autogenerated return type of UpdatePlaylistDefaultBpm
"""
type UpdatePlaylistDefaultBpmPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlist: Base!
}

"""
Autogenerated input type of UpdatePlaylist
"""
input UpdatePlaylistInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  key: String!
  playlistInput: PlaylistInput!
}

"""
Autogenerated input type of UpdatePlaylistMaxPlaybackRate
"""
input UpdatePlaylistMaxPlaybackRateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  key: String!
  maxPlaybackRate: Float
}

"""
Autogenerated return type of UpdatePlaylistMaxPlaybackRate
"""
type UpdatePlaylistMaxPlaybackRatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlist: Base!
}

"""
Autogenerated input type of UpdatePlaylistMinPlaybackRate
"""
input UpdatePlaylistMinPlaybackRateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  key: String!
  minPlaybackRate: Float
}

"""
Autogenerated return type of UpdatePlaylistMinPlaybackRate
"""
type UpdatePlaylistMinPlaybackRatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlist: Base!
}

"""
Autogenerated return type of UpdatePlaylist
"""
type UpdatePlaylistPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlist: Base!
}

"""
Autogenerated input type of UpdatePlaylistTitle
"""
input UpdatePlaylistTitleInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  key: String!
  title: String!
}

"""
Autogenerated return type of UpdatePlaylistTitle
"""
type UpdatePlaylistTitlePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlist: Base!
}

"""
Autogenerated input type of UpdateVideo
"""
input UpdateVideoInput {
  bpm: Int

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  key: String!
}

"""
Autogenerated return type of UpdateVideo
"""
type UpdateVideoPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  video: Video!
}

type Video {
  bpm: Int
  createdAt: ISO8601DateTime!
  id: ID!
  playlist: Base!
  playlistId: Int!
  updatedAt: ISO8601DateTime!
  youtubeVideoId: String!
  youtubeVideoTitle: String
}

"""
The connection type for Video.
"""
type VideoConnection {
  """
  A list of edges.
  """
  edges: [VideoEdge]

  """
  A list of nodes.
  """
  nodes: [Video]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type VideoEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Video
}
